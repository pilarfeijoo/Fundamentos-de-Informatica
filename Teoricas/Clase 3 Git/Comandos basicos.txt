$ pwd
/c/Users/agust/Desktop/UCEMA/Informatica

#BAJAR EL REPO
$ git clone https://github.com/MrPortnoy/UCEMA_Fundamentos_de_Informatica.git

Cloning into 'Programacion-1'...
remote: Enumerating objects: 24, done.
remote: Counting objects: 100% (24/24), done.
remote: Compressing objects: 100% (24/24), done.
remote: Total 24 (delta 6), reused 0 (delta 0), pack-reused 0
Receiving objects: 100% (24/24), 44.57 KiB | 285.00 KiB/s, done.
Resolving deltas: 100% (6/6), done.

#Para ingresar a la carpeta
cd UCEMA_Fundamentos_de_Informatica 

#REGISTRAR MAIL
git config --global user.email "agustin.brogliatti@hotmail.com"

#REGISTRAR USUARIO
git config --global user.name "Agustin Brogliatti"

#ADD. Registrar los cambios pero de forma intermedia, sin aun subirlos
git add .

#COMMIT Escritura definitiva
git commit -m "readme ingreso"

[main 8f14819] readme ingreso
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 Readme.txt

#me tira un codigo id que es util para algo que aun no vimos

#PUSH. Subir a la nube
 git push

#PULL. Bajar de la nube

#BRANCHS
Para trabajar en grupo se crear ramas donde c/u codea en partes que luegos son unidas, para asi no tener problemas 
de superposicion. Para unir todo finalmente se usa 'merge'.
git branch #listado
git branch Agustin #make branch
git branch -d Agustin #elimina la rama de forma segura, solo si ya se pasaron los cambios
git branch -D Agustin #elimina incluso si no la fusionaste
git branch -m Agustin #Rename
git checkout <Agustin> #Moverse a una rama
git checkout -b Agustin #Crear y comenzar a trabajar ahi
git branch --show-current #En que rama estamos

#Dentro de cada rama tengo que hacer los commits para guardar cambios en si misma

#STATUS
git STATUS

#Ignorar archivos
crear un .gitignore
dentro del archivo escribir los nombre de los archivos que quiere Ignorar
un ejemplo es *.txt ingorar todos los txt

git add .gitignore
git commit -m "ignore"

De ahora en mas si quiero usar esos archivos me dira que estan ignorados
